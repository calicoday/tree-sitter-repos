# from sample ts json
# I don't know what most of this does!!!

VERSION := 0.6.3

# install directory layout
PREFIX ?= /usr/local
INCLUDEDIR ?= $(PREFIX)/include
LIBDIR ?= $(PREFIX)/lib
PCLIBDIR ?= $(LIBDIR)/pkgconfig

SRC := libtaro.c 
OBJ := $(SRC:.c=.o)
LIB_TO_BE := libtaro
# LIB_TO_BE := libtree-sit-json

# define default flags, and override to append mandatory flags
CFLAGS ?= -O3 -Wall -Wextra -Werror
override CFLAGS += -std=gnu99 -fPIC -Ilib/src -Ilib/include

# ABI versioning
SONAME_MAJOR := 0
SONAME_MINOR := 0

# OS-specific bits
ifeq ($(shell uname),Darwin)
	SOEXT = dylib
	SOEXTVER_MAJOR = $(SONAME_MAJOR).dylib
	SOEXTVER = $(SONAME_MAJOR).$(SONAME_MINOR).dylib
	LINKSHARED += -dynamiclib -Wl,-install_name,$(LIBDIR)/$(LIB_TO_BE).$(SONAME_MAJOR).dylib
# 	LINKSHARED += -dynamiclib -Wl,-install_name,$(LIBDIR)/libtree-sitter.$(SONAME_MAJOR).dylib
else
	SOEXT = so
	SOEXTVER_MAJOR = so.$(SONAME_MAJOR)
	SOEXTVER = so.$(SONAME_MAJOR).$(SONAME_MINOR)
	LINKSHARED += -shared -Wl,-soname,$(LIB_TO_BE).so.$(SONAME_MAJOR)
# 	LINKSHARED += -shared -Wl,-soname,libtree-sitter.so.$(SONAME_MAJOR)
endif
ifneq (,$(filter $(shell uname),FreeBSD NetBSD DragonFly))
	PCLIBDIR := $(PREFIX)/libdata/pkgconfig
endif

all: lib taro
# all: libtree-sitter.a libtree-sitter.$(SOEXTVER)

lib: lib_to_be.a lib_to_be.$(SOEXTVER) 

taro: lib
# 	clang taro.c ./libtaro.dylib -o test-json-parser
	clang taro.c ./libtaro.a -o taro

lib_to_be.a: $(OBJ)
# 	$(AR) rcs $(LIB_TO_BE) $(LIB_TO_BE).o
	$(AR) rcs $(LIB_TO_BE).a $^
# 	$(AR) rcs $@ $^

lib_to_be.$(SOEXTVER): $(OBJ)
	$(CC) $(LDFLAGS) $(LINKSHARED) $^ $(LDLIBS) -o $(LIB_TO_BE)
	ln -sf $(LIB_TO_BE) $(LIB_TO_BE).$(SOEXT)
	ln -sf $(LIB_TO_BE) $(LIB_TO_BE).$(SOEXTVER_MAJOR)
# lib_to_be.$(SOEXTVER): $(OBJ)
# 	$(CC) $(LDFLAGS) $(LINKSHARED) $^ $(LDLIBS) -o $@
# 	ln -sf $@ $(LIB_TO_BE).$(SOEXT)
# 	ln -sf $@ $(LIB_TO_BE).$(SOEXTVER_MAJOR)

install: all
	# actu nope, not yet!!!
# 	install -d '$(DESTDIR)$(LIBDIR)'
# 	install -m755 $(LIB_TO_BE).a '$(DESTDIR)$(LIBDIR)'/$(LIB_TO_BE).a
# 	install -m755 $(LIB_TO_BE).$(SOEXTVER) '$(DESTDIR)$(LIBDIR)'/$(LIB_TO_BE).$(SOEXTVER)
# 	ln -sf $(LIB_TO_BE).$(SOEXTVER) '$(DESTDIR)$(LIBDIR)'/$(LIB_TO_BE).$(SOEXTVER_MAJOR)
# 	ln -sf $(LIB_TO_BE).$(SOEXTVER) '$(DESTDIR)$(LIBDIR)'/$(LIB_TO_BE).$(SOEXT)
# 	install -d '$(DESTDIR)$(INCLUDEDIR)'/tree_sitter
# 	install -m644 lib/include/tree_sitter/*.h '$(DESTDIR)$(INCLUDEDIR)'/tree_sitter/
# 	install -d '$(DESTDIR)$(PCLIBDIR)'
# 	sed -e 's|@LIBDIR@|$(LIBDIR)|;s|@INCLUDEDIR@|$(INCLUDEDIR)|;s|@VERSION@|$(VERSION)|' \
# 	    -e 's|=$(PREFIX)|=$${prefix}|' \
# 	    -e 's|@PREFIX@|$(PREFIX)|' \
# 	    tree-sit-parser.pc.in > '$(DESTDIR)$(PCLIBDIR)'/tree-sit-parser.pc ???
# # 	    tree-sitter.pc.in > '$(DESTDIR)$(PCLIBDIR)'/tree-sitter.pc

# install: all
# 	install -d '$(DESTDIR)$(LIBDIR)'
# 	install -m755 libtree-sitter.a '$(DESTDIR)$(LIBDIR)'/libtree-sitter.a
# 	install -m755 libtree-sitter.$(SOEXTVER) '$(DESTDIR)$(LIBDIR)'/libtree-sitter.$(SOEXTVER)
# 	ln -sf libtree-sitter.$(SOEXTVER) '$(DESTDIR)$(LIBDIR)'/libtree-sitter.$(SOEXTVER_MAJOR)
# 	ln -sf libtree-sitter.$(SOEXTVER) '$(DESTDIR)$(LIBDIR)'/libtree-sitter.$(SOEXT)
# 	install -d '$(DESTDIR)$(INCLUDEDIR)'/tree_sitter
# 	install -m644 lib/include/tree_sitter/*.h '$(DESTDIR)$(INCLUDEDIR)'/tree_sitter/
# 	install -d '$(DESTDIR)$(PCLIBDIR)'
# 	sed -e 's|@LIBDIR@|$(LIBDIR)|;s|@INCLUDEDIR@|$(INCLUDEDIR)|;s|@VERSION@|$(VERSION)|' \
# 	    -e 's|=$(PREFIX)|=$${prefix}|' \
# 	    -e 's|@PREFIX@|$(PREFIX)|' \
# 	    tree-sitter.pc.in > '$(DESTDIR)$(PCLIBDIR)'/tree-sitter.pc

clean:
# 	just a little
	rm -f *.o $(LIB_TO_BE).a $(LIB_TO_BE).$(SOEXT) $(LIB_TO_BE).$(SOEXTVER_MAJOR) $(LIB_TO_BE).$(SOEXTVER)
	
# 	nope, not yet!!!
# 	rm -f lib/src/*.o $(LIB_TO_BE).a $(LIB_TO_BE).$(SOEXT) $(LIB_TO_BE).$(SOEXTVER_MAJOR) $(LIB_TO_BE).$(SOEXTVER)

# clean:
# 	rm -f lib/src/*.o libtree-sitter.a libtree-sitter.$(SOEXT) libtree-sitter.$(SOEXTVER_MAJOR) libtree-sitter.$(SOEXTVER)

.PHONY: all install clean
