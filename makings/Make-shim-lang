# incoming: RUNTIME_VERS, MAKINGS_DIR, BUILD_DIR
# poss SRC_DIR??? to deal with wasm/wat, wasm/watever???

# ifneq (, $(LANG_NAME))
	### TMP!!! currently, langs have src/ not lib/src/, lib/include/
	SRC_DIR := src
	CFLAG_INCLUDES := -Isrc
	# except the ones that don't: sexp, typescript; wasm has 2, wast/src/ and wat/src/
	
	# add the tree-sitter runtime, for parser.h
	### TMP!!! will version_roster but for now, if we haven't been passed RUNTIME_VERS, set
	RUNTIME_VERS ?= 0.20.6
	CFLAG_INCLUDES += -Itree_sitter.$(RUNTIME_VERS)
	
	# collect C++ sources, and link if necessary
	CPPSRC := $(wildcard $(SRC_DIR)/*.cc)
	CXXFLAGS ?= -O3 -Wall -Wextra 
	override CXXFLAGS += -fPIC  $(CFLAG_INCLUDES)
	
	ifeq (, $(CPPSRC))
		ADD_LIBS := 
	else
		ADD_LIBS := -lc++
	endif
	# add tree-sitter includes for parser.h???
	
	# collect sources
	SRC := $(wildcard $(SRC_DIR)/*.c)
	SRC += $(CPPSRC)
# 	OBJ := $(addsuffix .o,$(basename $(SRC)))

	# external headers and pkgconfig
	TMPLT_C_BINDS_PKG := $(MAKINGS_DIR)/tree_sitter_lang.pc.in
	TMPLT_C_BINDS := $(MAKINGS_DIR)/tree_sitter_lang.h.in

# 	SRC_C_BINDS := bindings/c
# BUILD_DIR will have trailing slash if not empty
	SRC_C_BINDS := $(BUILD_DIR)
	C_BINDS := $(INCLUDE_NAME).h
	
	C_BINDS_PKG := $(INCLUDE_NAME).$(VERS_FULL).pc
	C_BINDS_PKG_SHORT := $(INCLUDE_NAME).pc

# endif


# outgoing: SRC, CFLAGS???, CXXFLAGS